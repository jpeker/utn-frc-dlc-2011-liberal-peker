/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package topsis;
import java.util.ArrayList;
import java.util.List;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author Federico
 */
public class cargarMatriz extends javax.swing.JFrame {

    /**
     * Creates new form cargarMatriz
     */
    private ArrayList<Criterio>criterios;
    private ArrayList<Alternativa>alternativas;
    private DefaultTableModel modeloMatriz;
    private DefaultTableModel modeloAlt;
    private double matrizNormalizada [][];
    public cargarMatriz(ArrayList<Criterio>listaCriterios,ArrayList<Alternativa>listaAlternativa) {
        initComponents();
        criterios=listaCriterios;
        alternativas=listaAlternativa;
        modeloMatriz=(DefaultTableModel)tablaMatriz.getModel();
        modeloAlt=(DefaultTableModel)tablaAlt.getModel();
        armarTabla();
        matrizNormalizada=new double[alternativas.size()][criterios.size()];
    }
    
    public cargarMatriz(ArrayList<Criterio>listaCriterios,ArrayList<Alternativa>listaAlternativa, List<String> matriz) {
        initComponents();
        criterios=listaCriterios;
        alternativas=listaAlternativa;
        modeloMatriz=(DefaultTableModel)tablaMatriz.getModel();
        modeloAlt=(DefaultTableModel)tablaAlt.getModel();
        armarTabla();
        matrizNormalizada=new double[alternativas.size()][criterios.size()];
        
    }
    private void armarTabla()
    {

//         modeloMatriz.addColumn("");      
        
        modeloMatriz.setRowCount(alternativas.size());
        for(int i=0;i<criterios.size();i++)
        {
            Criterio c=criterios.get(i);
            modeloMatriz.addColumn(c.getNombre());
        }
        String [] datos=new String[alternativas.size()];
        modeloAlt.addColumn("Alternativas");
        for(int i=0;i<alternativas.size();i++)
        {
            Alternativa a=alternativas.get(i);
//           datos[i]=a.getNombre();
            Object [] d={a.getNombre()};
            modeloAlt.addRow(d);
        }
//        modeloAlt.addRow(datos);
        tablaMatriz.getSelectionModel().setSelectionInterval(0, 0);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaMatriz = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaAlt = new javax.swing.JTable();
        btnGuardar = new javax.swing.JButton();
        rbMostrarCalculos = new javax.swing.JRadioButton();
        rbResultadoFinal = new javax.swing.JRadioButton();
        btnSiguiente = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Cargar de Datos");

        tablaMatriz.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tablaMatriz.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tablaMatrizKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tablaMatriz);

        tablaAlt.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(tablaAlt);

        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        buttonGroup1.add(rbMostrarCalculos);
        rbMostrarCalculos.setText("Mostrar Calculos ");
        rbMostrarCalculos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbMostrarCalculosActionPerformed(evt);
            }
        });

        buttonGroup1.add(rbResultadoFinal);
        rbResultadoFinal.setText("Mostrarme Resultado Final");
        rbResultadoFinal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbResultadoFinalActionPerformed(evt);
            }
        });

        btnSiguiente.setText("Siguiente");
        btnSiguiente.setEnabled(false);
        btnSiguiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSiguienteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnGuardar)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(108, 108, 108)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnSiguiente)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(rbResultadoFinal)
                                .addComponent(rbMostrarCalculos)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnGuardar)
                .addGap(69, 69, 69)
                .addComponent(rbMostrarCalculos)
                .addGap(18, 18, 18)
                .addComponent(rbResultadoFinal)
                .addGap(18, 18, 18)
                .addComponent(btnSiguiente)
                .addContainerGap(43, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        
       
        try
        {
       for(int i=0 ; i < matrizNormalizada.length;i++) {
            for(int j=0 ; j < matrizNormalizada[i].length;j++)           
            {
                double valor=Double.parseDouble((String)modeloMatriz.getValueAt(i,j));
                if(criterios.get(j).getTipo()==0)
                {if(valor!=0)
                  valor= 1/valor;
                }
//                double valor=Double.parseDouble((String)((Vector)modeloMatriz.getDataVector().elementAt(i)).elementAt(j));
                matrizNormalizada[i][j]=valor;
               
            }
        }
        }
        catch(NumberFormatException e)
        {
            JOptionPane.showMessageDialog(this, "Datos mal cargados", "error", JOptionPane.ERROR_MESSAGE);
       
            System.out.println(e.getMessage());
        }
       
            
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnSiguienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSiguienteActionPerformed
        normalizarMatriz pan=new normalizarMatriz(criterios,alternativas,matrizNormalizada);
        if(this.rbMostrarCalculos.isSelected())
        pan.setVisible(true);
        else
            pan.mostrarResultado();
    }//GEN-LAST:event_btnSiguienteActionPerformed

    private void rbMostrarCalculosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbMostrarCalculosActionPerformed
       this.btnSiguiente.setEnabled(true);
    }//GEN-LAST:event_rbMostrarCalculosActionPerformed

    private void rbResultadoFinalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbResultadoFinalActionPerformed
        this.btnSiguiente.setEnabled(true);
    }//GEN-LAST:event_rbResultadoFinalActionPerformed

    private void tablaMatrizKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tablaMatrizKeyReleased
//        int a=alternativas.size()-1;
//        int b=criterios.size()-1;
////        if(evt.getKeyCode() == java.awt.event.KeyEvent.VK_TAB)
////        {
//            if((tablaMatriz.getSelectedRow()==a) && (tablaMatriz.getSelectedColumn()==b))
//            {
//                this.btnGuardar.setSelected(true);
//            } 
                
//        }
    }//GEN-LAST:event_tablaMatrizKeyReleased

  

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnSiguiente;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JRadioButton rbMostrarCalculos;
    private javax.swing.JRadioButton rbResultadoFinal;
    private javax.swing.JTable tablaAlt;
    private javax.swing.JTable tablaMatriz;
    // End of variables declaration//GEN-END:variables
}
