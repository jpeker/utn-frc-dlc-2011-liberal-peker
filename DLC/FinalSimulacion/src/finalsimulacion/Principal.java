/*
 * Principal.java
 *
 * Created on 10 de mayo de 2007, 11:59
 */
package finalsimulacion;

import java.util.*;
import javax.swing.table.*;

public class Principal extends javax.swing.JFrame {

    private float zmaximo, x1optimo, x2optimo;
    private int cantSimulacion = 0;
    private DefaultTableModel modelo = null;

    public Principal() {
        initComponents();

        columnas();
        jTable1.setModel(modelo);
    }
    /* Calculo la funcion optima (Z)
     * recibo por parametro los valores de x1 y x1
     */
    private float calcularFuncionOptima(float x1, float x2) {
        float aux = 20 * x1 + 30 * x2;
        aux = (float) Math.round(aux * 10000) / 10000; // convierto en el numero con  4 decimales
        return aux;
    }
    /*Compruebo si el z obtenido es el maximo si lo es lo asignno como zmaximo
     * recibo como parametro el z calculado y los valores de x1 y x2
     */
    private void maximoZ(float x1, float x2, float z) {
        if (z > zmaximo) {
            zmaximo = z;
            x1optimo = x1;
            x2optimo = x2;
        }
    }

    private void columnas() {
        modelo = new DefaultTableModel();
        modelo.addColumn("Numero");
        modelo.addColumn("RND1"); 
        modelo.addColumn("X1");
        modelo.addColumn("RND2");           
        modelo.addColumn("X2"); 
        modelo.addColumn("Z");
        modelo.addColumn("Z-Maximo");      
        modelo.addColumn("X1 optimo");
        modelo.addColumn("X2 optimo");
        modelo.addColumn("Cumple Restricciones");
        jTable1.setModel(modelo);
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jTextField9 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txtX1 = new javax.swing.JLabel();
        txtX2 = new javax.swing.JLabel();
        txtZ = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Ejercicio Final Numero 280");
        setBackground(new java.awt.Color(217, 217, 221));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("Simular");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel6.setText("Cantidad de Simulaciones");

        jLabel1.setText("Conjunto de valores que maximan el valor de z:");

        txtX1.setText("X1");

        txtX2.setText("X2");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .addContainerGap()
                        .add(jLabel6)
                        .add(61, 61, 61)
                        .add(jTextField9, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 62, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(52, 52, 52)
                        .add(jButton1))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 838, Short.MAX_VALUE))
                    .add(layout.createSequentialGroup()
                        .add(44, 44, 44)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(txtX1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 82, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(layout.createSequentialGroup()
                                .add(jLabel1)
                                .add(41, 41, 41)
                                .add(txtZ))
                            .add(txtX2))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .add(28, 28, 28)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jLabel6)
                    .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                        .add(jTextField9, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(jButton1)))
                .add(18, 18, 18)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 448, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1)
                    .add(txtZ))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(txtX1)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(txtX2)
                .add(59, 59, 59))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
// TODO add your handling code here:
        columnas();
        cantSimulacion = Integer.parseInt(jTextField9.getText());
        Random rnd = new Random();
        float RandomX1;
        float RandomX2;
        float X1;
        float X2;
        float z;
        zmaximo = 0;
        for (int i = 0; i < cantSimulacion; i++) {
            String[] columna = new String[10];
            RandomX1 = rnd.nextFloat();// calculo el random para X1
            RandomX2 = rnd.nextFloat();// calculo el random para X2
            columna[0] = "" + (i + 1);
            columna[1] = "" + RandomX1;
            X1 = 0 + RandomX1 * 70; // calculo el X1 con Distribuccion uniforme
            X1 = (float) Math.round(X1 * 10000) / 10000;//convierto en cuatro decimales
            columna[2] = "" + X1;
            columna[3] = "" + RandomX2;
            X2 = 0 + RandomX2 * 50; // calculo el X2 con Distribuccion uniforme
            X2 = (float) Math.round(X2 * 10000) / 10000;//convierto en cuatro decimales
            columna[4] = "" + X2;// 
            float restriccion3 = X1 + X2;
            if (restriccion3 <= 120) {
                z = this.calcularFuncionOptima(X1, X2);//calculo el z
                columna[5] = "" + z;
                columna[9] = "SI";
                this.maximoZ(X1, X2, z);// verifico si el z obtenido es el maximo
            } else {
                columna[5] = " ";
                columna[9] = "NO";
            }
            columna[6] = "" + zmaximo;
            columna[7] = "" + x1optimo;
            columna[8] = "" + x2optimo;
            modelo.addRow(columna);
        }
        this.txtZ.setText(" " + zmaximo);
        this.txtX1.setText("X1 = " + x1optimo);
        this.txtX2.setText("X2 = " + x2optimo);
    }//GEN-LAST:event_jButton1ActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField9;
    private javax.swing.JLabel txtX1;
    private javax.swing.JLabel txtX2;
    private javax.swing.JLabel txtZ;
    // End of variables declaration//GEN-END:variables
}
