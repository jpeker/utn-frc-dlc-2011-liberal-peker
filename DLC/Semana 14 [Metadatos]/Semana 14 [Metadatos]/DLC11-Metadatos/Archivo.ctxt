#BlueJ class context
comment0.target=Archivo()
comment0.text=\nCrea\ un\ archivo\ con\ el\ nombre\ tabla.dat,\ con\ la\ descripci\u00F3n\ de\ sus\ campos\ en\ la\ cabecera\ a\ modo\ de\ metadatos\n\n
comment1.params=nom
comment1.target=Archivo(String)
comment1.text=\nCrea\ un\ descriptor\ de\ archivo\ con\ el\ nombre\ tomado\ como\ par\u00E1metro\ +\ extensi\u00F3n\ .dat,\ y\ \nagrega\ la\ descripci\u00F3n\ de\ sus\ campos\ como\ cabecera\ en\ el\ mismo\ archivo.\n\n
comment10.target=boolean\ eof()
comment10.text=\nDetermina\ si\ se\ ha\ llegado\ al\ final\ del\ archivo\ o\ no\n@return\ true\ si\ se\ lleg\u00F3\ al\ final\ -\ false\ en\ caso\ contrario\n@throws\ IOException\ si\ hubo\ problema\ en\ la\ operaci\u00F3n\n\n
comment11.params=x
comment11.target=void\ grabarInt(int)
comment11.text=\nGraba\ un\ int\ en\ el\ archivo\ de\ datos\n@param\ x\ el\ valor\ a\ grabar\n\n
comment12.params=x
comment12.target=void\ grabarFloat(float)
comment12.text=\nGraba\ un\ float\ en\ el\ archivo\ de\ datos\n@param\ x\ el\ valor\ a\ grabar\n\n
comment13.params=x\ cant
comment13.target=void\ grabarString(String,\ int)
comment13.text=\nGraba\ un\ String\ en\ el\ archivo\ de\ datos\n@param\ x\ el\ valor\ a\ grabar\n@param\ cant\ la\ cantidad\ de\ caracteres\ a\ grabar\n\n
comment14.target=int\ leerInt()
comment14.text=\nLee\ un\ int\ del\ archivo\ de\ datos\n@return\ el\ valor\ leido\n\n
comment15.target=float\ leerFloat()
comment15.text=\nLee\ un\ float\ del\ archivo\ de\ datos\n@return\ el\ valor\ leido\n\n
comment16.params=cant
comment16.target=String\ leerString(int)
comment16.text=\nLee\ un\ String\ del\ archivo\ de\ datos\n@param\ cant\ la\ cantidad\ de\ caracteres\ a\ leer\n@return\ el\ valor\ leido\n\n
comment17.params=arch\ tam
comment17.target=String\ readString(RandomAccessFile,\ int)
comment17.text=\nLee\ desde\ un\ archivo\ un\ String\ de\ "tam"\ caracteres\n@param\ \ arch\ el\ archivo\ desde\ el\ cual\ se\ lee\n@param\ \ tam\ la\ cantidad\ de\ caracteres\ a\ leer\n@return\ el\ String\ leido\n@throws\ IOException\ si\ hubo\ alg\u00FAn\ problema\ de\ lectura\n\n
comment18.params=arch\ cad\ tam
comment18.target=void\ writeString(RandomAccessFile,\ String,\ int)
comment18.text=\nGraba\ en\ un\ archivo\ un\ String\ de\ "tam"\ caracteres\n@param\ \ arch\ el\ archivo\ en\ el\ cual\ se\ graba\n@param\ \ cad\ la\ cadena\ a\ a\ grabar\ \n@param\ \ tam\ la\ cantidad\ de\ caracteres\ a\ grabar\n@throws\ IOException\ si\ hubo\ alg\u00FAn\ problema\ de\ grabacion\n\n
comment19.target=void\ crearVector()
comment19.text=\nCrea\ un\ vector\ (miembro\ de\ la\ clase)\ con\ la\ informaci\u00F3n\ de\ todos\ los\ campos\n\n
comment2.target=String\ getNombreGeneral()
comment2.text=\nAccede\ al\ nombre\ del\ archivo\n@return\ el\ nombre\ del\ archivo\n\n
comment3.target=Campo[]\ getCampos()
comment4.target=long\ getIniDatos()
comment4.text=\nRetorna\ la\ direcci\u00F3n\ de\ inicio\ del\ \u00E1rea\ de\ datos\ en\ el\ archivo\n@return\ la\ direcci\u00F3n\ de\ inicio\ del\ \u00E1rea\ de\ datos\n\n
comment5.params=cm
comment5.target=void\ grabarMetaDato(Campo)
comment5.text=\nGraba\ un\ registro\ de\ metadatos\ en\ la\ cabecera\ del\ archivo\ maestro\n@param\ cm\ el\ registro\ de\ metadatos\ a\ grabar\n\n
comment6.params=c
comment6.target=void\ grabarMetaDato(Vector)
comment6.text=\nGraba\ un\ vector\ de\ registros\ de\ metadatos\ en\ la\ cabecera\ del\ archivo\ maestro\n@param\ c\ el\ vector\ de\ registros\ de\ metadatos\ a\ grabar\n\n
comment7.target=void\ crear()
comment7.text=\nCrea\ el\ archivo,\ dejandolo\ abierto\ para\ grabar,\ y\ posicionado\ en\ el\ byte\ cero.\ Luego\ de\ la\ apertura,\ deber\u00EDa\ngrabarse\ la\ informaci\u00F3n\ de\ metadatos.\ Si\ el\ archivo\ ya\ exist\u00EDa,\ lo\ pisa\ y\ lo\ vuelve\ a\ crear.\n\n
comment8.params=forma
comment8.target=void\ abrir(String)
comment8.text=\nAbre\ el\ archivo\ de\ datos,\ que\ se\ supone\ que\ ya\ exist\u00EDa.\ Si\ no\ exist\u00EDa,\ se\ lanza\ una\ excepci\u00F3n\ declarada\ por\ el\ programador\ndel\ tipo\ ArchivoInexistenteException.\ Crea\ un\ vector\ en\ memoria\ con\ la\ informaci\u00F3n\ de\ cabecera,\ y\ deja\ el\ file\ pointer\ del\ \narchivo\ posicionado\ al\ final\ del\ archivo\ si\ la\ forma\ de\ apertura\ es\ "rw",\ o\ al\ principio\ del\ \u00E1rea\ de\ datos\ si\ es\ "r".\n@param\ forma\ el\ modo\ de\ apertura\n\n
comment9.target=void\ cerrar()
comment9.text=\nCierra\ el\ archivo\n\n
numComments=20
